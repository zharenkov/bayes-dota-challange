server:
  error.whitelabel.enabled: false
  port: ${SERVER_PORT:8080}

spring:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    open-in-view: false
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        temp:
          use_jdbc_metadata_defaults: false
        generate_statistics: true
      javax:
        persistence:
          query.timeout: 10000
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:dota
    username: sa
    password: password
  banner:
    image:
      location: classpath:banner.png
      width: 100
      height: 15
      margin: 1
  h2:
    console:
      enabled: true

logging.config: classpath:logback-${ENV:development}.xml

# application logic specific settings
bayes:
  dota:
    parser:
      regex:
        name_pattern: '[A-Za-z_0-9]+'
        timestamp: \[(\d{2}:\d{2}:\d{2}.\d{1,3})\]
        hero_name: npc_dota_hero_${bayes.dota.parser.regex.name_pattern}
        item_name: item_${bayes.dota.parser.regex.name_pattern}
        kill: ${bayes.dota.parser.regex.timestamp}\s(${bayes.dota.parser.regex.hero_name})\sis\skilled\sby\s(${bayes.dota.parser.regex.hero_name})
        hit: ${bayes.dota.parser.regex.timestamp}\s(${bayes.dota.parser.regex.hero_name})\shits\s(${bayes.dota.parser.regex.hero_name})\swith\s(${bayes.dota.parser.regex.name_pattern})\sfor\s(\d{1,})\sdamage
        buy: ${bayes.dota.parser.regex.timestamp}\s(${bayes.dota.parser.regex.hero_name})\sbuys\sitem\s(${bayes.dota.parser.regex.item_name})
        cast: ${bayes.dota.parser.regex.timestamp}\s(${bayes.dota.parser.regex.hero_name})\scasts\sability\s(${bayes.dota.parser.regex.name_pattern})\s\(lvl\s(\d{1,})\)\son\s${bayes.dota.parser.regex.name_pattern}
